{"version":3,"file":"static/js/387.dbf94b2b.chunk.js","mappings":"2QAEaA,EAAWC,EAAAA,GAAAA,GAAH,wHAQRC,EAAWD,EAAAA,GAAAA,GAAH,oG,SCmCrB,EAxCa,WACX,OAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WACHF,GADS,sCAedG,CADS,6CAAyCH,EAAzC,oEACUD,GAfL,wCAGd,WAA6BK,EAAKC,GAAlC,oGAEuBC,EAAAA,GAAAA,IAAUF,GAFjC,cAEUG,EAFV,gBAGuBA,EAAKC,KAH5B,cAGUA,EAHV,gBAI2BA,EAAKC,KAJhC,OAIUX,EAJV,OAKIO,EAASP,GALb,kDAOIY,QAAQC,IAAI,KAAEC,SAPlB,0DAHc,wBAgBf,GAAE,CAACZ,KAGF,SAACN,EAAD,UACGI,EAASe,KAAI,SAAAC,GACZ,IAAQC,EAAsCD,EAAtCC,GAAIC,EAAkCF,EAAlCE,aAAcC,EAAoBH,EAApBG,KAAMC,EAAcJ,EAAdI,UAC1BC,EAASH,EAAY,yCACWA,GAClC,OACJ,OACE,UAACpB,EAAD,YACE,gBAAKwB,IAAKD,EAAQE,IAAKJ,EAAMK,MAAM,SACnC,wBAAKL,KACL,uCAAeC,OAHFH,EAMlB,KAGN,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  width: 1440px;\n  flex-wrap: nowrap;\n  overflow: auto;\n  margin: 0 auto;\n`;\n\nexport const CastItem = styled.li`\n  :not(:last-child) {\n    margin-right: 10px;\n    list-style: none;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { CastItem, CastList } from './Cast.styled';\n\nconst Cast = () => {\n  const [filmCast, setFilmCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    async function fetchFilmCast(url, setState) {\n      try {\n        const resp = await axios.get(url);\n        const data = await resp.data;\n        const filmCast = await data.cast;\n        setState(filmCast);\n      } catch (e) {\n        console.log(e.message);\n      }\n    }\n\n    const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=d6e97164aaa08d2091b81af2621a507c&language=en-US`;\n    fetchFilmCast(url, setFilmCast);\n  }, [movieId]);\n\n  return (\n    <CastList>\n      {filmCast.map(film => {\n        const { id, profile_path, name, character } = film;\n        const imgSrc = profile_path\n          ? `https://image.tmdb.org/t/p/w500${profile_path}`\n          : 'none';\n        return (\n          <CastItem key={id}>\n            <img src={imgSrc} alt={name} width=\"300\" />\n            <h3>{name}</h3>\n            <p>Character: {character}</p>\n          </CastItem>\n        );\n      })}\n    </CastList>\n  );\n};\nexport default Cast;\n"],"names":["CastList","styled","CastItem","useState","filmCast","setFilmCast","movieId","useParams","useEffect","fetchFilmCast","url","setState","axios","resp","data","cast","console","log","message","map","film","id","profile_path","name","character","imgSrc","src","alt","width"],"sourceRoot":""}