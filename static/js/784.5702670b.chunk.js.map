{"version":3,"file":"static/js/784.5702670b.chunk.js","mappings":"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","sources":["components/FilmCard/FilmCard.styled.js","components/FilmCard/FilmCard.jsx","components/SearchError/SearchError.styled.js","components/SearchError/SearchError.jsx","components/Movies/Movies.jsx","images/search.svg","components/Movies/Movies.styled.js","components/js/fetchFilms.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const ListItem = styled.li`\n  border-radius: 5px;\n  list-style: none;\n  width: 340px;\n\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    opacity: 0.9;\n    transform: scale(1.025);\n  }\n`;\n\nexport const Poster = styled.img`\n  display: block;\n  width: 100%;\n  border-radius: 6px;\n`;\n\nexport const Title = styled.h2`\n  text-transform: uppercase;\n  margin-top: 12px;\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 1.33;\n  text-align: start;\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n  width: 100%;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Poster, Link, Title, ListItem } from './FilmCard.styled';\nimport { useLocation } from 'react-router-dom';\n\nexport const FilmCard = ({ posterPath, title, movieId }) => {\n  const location = useLocation();\n  const filmPosterSrc = `https://image.tmdb.org/t/p/w500/${posterPath}`;\n  return (\n    <ListItem>\n      <Link to={`/movies/${movieId}`} state={{ from: location }}>\n        <Poster src={posterPath ? filmPosterSrc : 'none'} alt={title} />\n        <Title>{title}</Title>\n      </Link>\n    </ListItem>\n  );\n};\n\nFilmCard.propTypes = {\n  posterPath: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ErrWrapper = styled.div`\n  margin: 0 auto;\n  text-align: center;\n  font-size: 24px;\n  font-weight: 700;\n`;\n","import React from 'react';\nimport Icon404 from '../../images/img404.png';\nimport PropTypes from 'prop-types';\nimport { ErrWrapper } from './SearchError.styled';\n\nexport const SearchError = ({ message }) => {\n  return (\n    <ErrWrapper>\n      <p>{message}</p>\n      <img src={Icon404} alt=\"no-images\" />\n    </ErrWrapper>\n  );\n};\n\nSearchError.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import { useState } from 'react';\nimport { fetchFilms } from 'components/js/fetchFilms';\nimport { FilmCard } from 'components/FilmCard/FilmCard';\nimport {\n  List,\n  Container,\n  FormInput,\n  FormBtnLabel,\n  FormBtn,\n  Form,\n} from './Movies.styled';\nimport { useSearchParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { SearchError } from 'components/SearchError/SearchError';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [films, setFilms] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('searchQuery');\n\n  const onInputValue = e => {\n    setQuery(e.target.value.toLowerCase());\n  };\n\n  useEffect(() => {\n    if (!searchQuery) return;\n    setStatus('pending');\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=d6e97164aaa08d2091b81af2621a507c&language=en-US&query=${searchQuery}&page=1&include_adult=false`;\n    fetchFilms(url, setFilms, setStatus);\n    setStatus('resolved');\n  }, [searchQuery]);\n\n  const formSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') return;\n    setSearchParams({ searchQuery: query });\n    setQuery('');\n  };\n  return (\n    <Container>\n      <Form onSubmit={formSubmit}>\n        <label>\n          <FormInput\n            value={query}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            onInput={onInputValue}\n          />\n        </label>\n        <FormBtn type=\"submit\">\n          <FormBtnLabel>Search</FormBtnLabel>\n        </FormBtn>\n      </Form>\n      {status === 'resolved' && films.length > 0 && (\n        <List>\n          {films.map(film => {\n            const { id, poster_path, title, name } = film;\n            return (\n              <FilmCard\n                key={id}\n                posterPath={poster_path}\n                title={title ?? name}\n                movieId={id}\n              />\n            );\n          })}\n        </List>\n      )}\n      {status === 'no-results' && (\n        <SearchError\n          message={`Sorry, we did not find any movies for \"${searchQuery}\"`}\n        />\n      )}\n    </Container>\n  );\n};\nexport default Movies;\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSearch(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 32,\n    height: 32,\n    viewBox: \"0 0 32 32\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"search\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31.008 27.231l-7.58-6.447c-0.784-0.705-1.622-1.029-2.299-0.998 1.789-2.096 2.87-4.815 2.87-7.787 0-6.627-5.373-12-12-12s-12 5.373-12 12 5.373 12 12 12c2.972 0 5.691-1.081 7.787-2.87-0.031 0.677 0.293 1.515 0.998 2.299l6.447 7.58c1.104 1.226 2.907 1.33 4.007 0.23s0.997-2.903-0.23-4.007zM12 20c-4.418 0-8-3.582-8-8s3.582-8 8-8 8 3.582 8 8-3.582 8-8 8z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSearch);\nexport default __webpack_public_path__ + \"static/media/search.6ac6b6bcaab3e1f140239b578f8e8c63.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\nimport img from '../../images/search.svg';\n\nexport const Container = styled.div`\n  padding-top: 120px;\n  width: 1440px;\n  margin: 0 auto;\n`;\n\nexport const List = styled.ul`\n  padding: 30px 0 60px;\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  flex-wrap: wrap;\n  margin: 0;\n`;\n\nexport const Form = styled.form`\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  border: 1px solid black;\n`;\nexport const FormBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('${img}');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\nexport const FormInput = styled.input`\n  display: inline-block;\n  width: 550px;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const FormBtnLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n","import axios from 'axios';\nexport async function fetchFilms(url, setState, setStatus) {\n  try {\n    const resp = await axios.get(url);\n    const data = await resp.data;\n    const filmsArr = await data.results;\n    if (data.total_results === 0) setStatus('no-results');\n    setState(filmsArr);\n  } catch (e) {\n    console.log(e.message);\n  }\n}\n"],"names":["ListItem","styled","Poster","Title","Link","NavLink","FilmCard","posterPath","title","movieId","location","useLocation","filmPosterSrc","to","state","from","src","alt","ErrWrapper","SearchError","message","Icon404","useState","query","setQuery","films","setFilms","status","setStatus","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","url","fetchFilms","onSubmit","e","preventDefault","trim","value","type","autoComplete","autoFocus","placeholder","onInput","target","toLowerCase","length","map","film","id","poster_path","name","Container","List","Form","FormBtn","img","FormInput","FormBtnLabel","setState","axios","resp","data","results","filmsArr","total_results","console","log"],"sourceRoot":""}