{"version":3,"file":"static/js/387.c04fc2b8.chunk.js","mappings":"8SACO,SAAeA,IAAtB,4CAAO,OAAP,oBAAO,8FAEH,yFAFG,SAGcC,EAAAA,GAAAA,IADjB,0FAFG,cAGCC,EAHD,gBAIcA,EAAKC,KAJnB,cAICA,EAJD,gBAKkBA,EAAKC,QALvB,cAKCC,EALD,yBAOEA,GAPF,mEAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,oFACCC,EADD,kHACkHD,EADlH,wCAEcN,EAAAA,GAAAA,IAAUO,GAFxB,cAECN,EAFD,gBAGcA,EAAKC,KAHnB,cAGCA,EAHD,gBAIkBA,EAAKC,QAJvB,cAICC,EAJD,yBAME,CAAEA,SAAAA,EAAUF,KAAAA,IANd,mEASA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,kFACCF,EADD,6CAC6CE,EAD7C,qEAEcT,EAAAA,GAAAA,IAAUO,GAFxB,cAECN,EAFD,gBAGcA,EAAKC,KAHnB,cAGCA,EAHD,yBAKEA,GALF,kEAQA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAAgCD,GAAhC,oFACCF,EADD,6CAC6CE,EAD7C,oFAEcT,EAAAA,GAAAA,IAAUO,GAFxB,cAECN,EAFD,gBAGcA,EAAKC,KAHnB,cAGCA,EAHD,gBAIkBA,EAAKC,QAJvB,cAICC,EAJD,yBAMEA,GANF,mEASA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,oFACCL,EADD,6CAC6CK,EAD7C,6EAEcZ,EAAAA,GAAAA,IAAUO,GAFxB,cAECN,EAFD,gBAGcA,EAAKC,KAHnB,cAGCA,EAHD,gBAIkBA,EAAKW,KAJvB,cAICC,EAJD,yBAKEA,GALF,mE,iICnCMC,EAAWC,EAAAA,GAAAA,GAAH,wHAQRC,EAAWD,EAAAA,GAAAA,GAAH,oG,kBCyBrB,EA7Ba,WACX,OAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAOJ,EAAP,KAAiBK,EAAjB,KACQP,GAAYQ,EAAAA,EAAAA,MAAZR,QAUR,OARAS,EAAAA,EAAAA,YAAU,WACHT,IAELD,EAAAA,EAAAA,IAAcC,GACXU,KAAKH,GACLI,OAAM,SAAAC,GAAC,OAAIC,QAAQC,IAAIF,EAAEG,QAAlB,GACX,GAAE,CAACf,KAGF,SAACG,EAAD,UACGD,EAASc,KAAI,SAAAC,GACZ,IAAQpB,EAAsCoB,EAAtCpB,GAAIqB,EAAkCD,EAAlCC,aAAcC,EAAoBF,EAApBE,KAAMC,EAAcH,EAAdG,UAC1BC,EAAM,yCAAqCH,GAEjD,OACE,UAACb,EAAD,YACE,gBAAKiB,IAAKJ,EAAeG,EAASE,EAASC,IAAKL,EAAMM,MAAM,SAC5D,wBAAKN,KACL,uCAAeC,OAHFvB,EAMlB,KAGN,C","sources":["api-service/fetchFilms.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\nexport async function fetchPopularFilms() {\n  const url =\n    'https://api.themoviedb.org/3/trending/all/day?api_key=d6e97164aaa08d2091b81af2621a507c';\n  const resp = await axios.get(url);\n  const data = await resp.data;\n  const filmsArr = await data.results;\n\n  return filmsArr;\n}\n\nexport async function fetchFilmsByQuery(searchQuery) {\n  const url = `https://api.themoviedb.org/3/search/movie?api_key=d6e97164aaa08d2091b81af2621a507c&language=en-US&query=${searchQuery}&page=1&include_adult=false`;\n  const resp = await axios.get(url);\n  const data = await resp.data;\n  const filmsArr = await data.results;\n\n  return { filmsArr, data };\n}\n\nexport async function fetchFilmDetails(id) {\n  const url = `https://api.themoviedb.org/3/movie/${id}?api_key=d6e97164aaa08d2091b81af2621a507c&language=en-US`;\n  const resp = await axios.get(url);\n  const data = await resp.data;\n\n  return data;\n}\n\nexport async function fetchFilmReviews(id) {\n  const url = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=d6e97164aaa08d2091b81af2621a507c&language=en-US&page=1`;\n  const resp = await axios.get(url);\n  const data = await resp.data;\n  const filmsArr = await data.results;\n\n  return filmsArr;\n}\n\nexport async function fetchFilmCast(movieId) {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=d6e97164aaa08d2091b81af2621a507c&language=en-US`;\n  const resp = await axios.get(url);\n  const data = await resp.data;\n  const filmCast = await data.cast;\n  return filmCast;\n}\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  width: 1440px;\n  flex-wrap: nowrap;\n  overflow: auto;\n  margin: 0 auto;\n`;\n\nexport const CastItem = styled.li`\n  :not(:last-child) {\n    margin-right: 10px;\n    list-style: none;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { fetchFilmCast } from 'api-service/fetchFilms';\nimport { useParams } from 'react-router-dom';\nimport { CastItem, CastList } from './Cast.styled';\nimport noImage from 'images/noImage.png';\n\nconst Cast = () => {\n  const [filmCast, setFilmCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    fetchFilmCast(movieId)\n      .then(setFilmCast)\n      .catch(e => console.log(e.message));\n  }, [movieId]);\n\n  return (\n    <CastList>\n      {filmCast.map(film => {\n        const { id, profile_path, name, character } = film;\n        const imgSrc = `https://image.tmdb.org/t/p/w500${profile_path}`;\n\n        return (\n          <CastItem key={id}>\n            <img src={profile_path ? imgSrc : noImage} alt={name} width=\"300\" />\n            <h3>{name}</h3>\n            <p>Character: {character}</p>\n          </CastItem>\n        );\n      })}\n    </CastList>\n  );\n};\nexport default Cast;\n"],"names":["fetchPopularFilms","axios","resp","data","results","filmsArr","fetchFilmsByQuery","searchQuery","url","fetchFilmDetails","id","fetchFilmReviews","fetchFilmCast","movieId","cast","filmCast","CastList","styled","CastItem","useState","setFilmCast","useParams","useEffect","then","catch","e","console","log","message","map","film","profile_path","name","character","imgSrc","src","noImage","alt","width"],"sourceRoot":""}